file(GLOB srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB headers "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp")
add_executable(unit_testing ${srcs} 
"src/PKB/TestEntityStore.cpp"
"src/PKB/TestFollowsStar.cpp"
"src/PKB/TestFollowsStore.cpp"
"src/PKB/TestModifiesProcStore.cpp"
"src/PKB/TestModifiesStore.cpp"
"src/PKB/TestParentStarStore.cpp"
"src/PKB/TestParentStore.cpp"
"src/PKB/TestPkbPopulator.cpp"
"src/PKB/TestPkbRetriever.cpp"
"src/PKB/TestStmtStore.cpp"
"src/PKB/TestUsesStore.cpp"
"src/PKB/TestUsesProcStore.cpp" 
"src/PKB/TestCallsStore.cpp" 
"src/PKB/TestCallsStarStore.cpp"
"src/PKB/TestAttributeStore.cpp"
"src/PKB/TestNextStore.cpp"
"src/PKB/TestCFGStore.cpp"
"src/PKB/TestContainCallsStore.cpp"
"src/QPS/TestQPS.cpp"
"src/QPS/Constants/TestQpsClause.cpp"
"src/QPS/Constants/TestQpsConstants.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsFollowsClause.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsFollowsStClause.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsModifiesClauseResolve.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsParentClause.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsParentStClause.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsPatternClauseResolve.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsCallsStClause.cpp"  
"src/QPS/Constants/ClauseResolve/TestQpsCallsClause.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsWithClause.cpp"
"src/QPS/TestQpsStringUtils.cpp"
"src/QPS/TestAttrUtils.cpp"
"src/QPS/Constants/TestQpsSynonyms.cpp"
"src/QPS/Evaluator/TestResultFormatter.cpp"
"src/QPS/Evaluator/TestQpsTable.cpp"
"src/QPS/Constants/ClauseResolve/TestQpsUsesClauseResolve.cpp"
"src/QPS/Constants/TestQpsValue.cpp"
"src/QPS/Constants/TestQpsWildcard.cpp"
"src/QPS/Evaluator/TestQueryEvaluator.cpp"
"src/QPS/Parser/TestQueryParser.cpp"
"src/QPS/Tokenizer/TestQueryTokenizer.cpp"
"src/SP/TestDesignExtractor.cpp"
"src/SP/TestExpressionParser.cpp"
"src/SP/TestParser.cpp"
"src/SP/TestSourceProcessor.cpp"
"src/SP/TestStmtParser.cpp"
"src/SP/TestTNode.cpp"
"src/SP/TestTokenizer.cpp" )

target_link_libraries(unit_testing spa)

