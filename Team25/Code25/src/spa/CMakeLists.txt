file(GLOB srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB headers "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp")
add_library(spa ${srcs} ${headers} 
"src/PKB/PkbPopulator.h" 
"src/PKB/PkbPopulator.cpp" 
"src/PKB/PkbRetriever.cpp" 
"src/PKB/PkbRetriever.h" 
"src/PKB/VariableStore.cpp"
"src/PKB/VariableStore.h"
"src/PKB/ConstantStore.cpp"
"src/PKB/ConstantStore.h" 
"src/PKB/StatementStore.h" 
"src/PKB/StatementStore.cpp" 
"src/PKB/ProcedureStore.cpp" 
"src/PKB/ProcedureStore.h" 
"src/PKB/FollowsStore.cpp"
"src/PKB/FollowsStore.h" 
"src/PKB/ModifiesStore.h" 
"src/PKB/ModifiesStore.cpp" 
"src/PKB/ModifiesProcStore.h"
"src/PKB/ModifiesProcStore.cpp"
"src/QPS/QueryParser.cpp"
"src/QPS/QueryParser.h" 
"src/QPS/ParserResponse.cpp"
"src/QPS/ParserResponse.h" 
"src/QPS/QueryTokenizer.cpp"
"src/QPS/QueryTokenizer.h" 
"src/QPS/QueryEvaluator.cpp" 
"src/QPS/QueryEvaluator.h"
"src/QPS/constants/Synonym.cpp" 
"src/QPS/constants/Synonym.h"
"src/QPS/constants/Constants.cpp"
"src/QPS/constants/Constants.h"
"src/QPS/constants/Clause.h"
"src/QPS/constants/Clause.cpp" 
"src/QPS/constants/Value.h" 
"src/QPS/constants/Value.cpp" 
"src/QPS/constants/Wildcard.h"
"src/QPS/constants/Wildcard.cpp" 
"src/QPS/Qps.cpp" "src/QPS/Qps.h" 
"src/Tokenizer.cpp" 
"src/Tokenizer.h"
"src/SourceProcessor.cpp" 
"src/SourceProcessor.h"
"src/Token.cpp" "src/Token.h" 
"src/ExpressionParser.cpp"
"src/ExpressionParser.h" 
"src/PKB/EntityStore.h"
"src/PKB/EntityInterface.h"   
"src/PKB/FollowsStarStore.h"
"src/PKB/FollowsStarStore.cpp" 
"src/PKB/ParentStore.cpp" 
"src/PKB/ParentStarStore.h" 
"src/PKB/ParentStarStore.cpp"
"src/PKB/PatternStore.h"
"src/PKB/PatternStore.cpp")
# this makes the headers accessible for other projects which uses spa lib
target_include_directories(spa PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)


