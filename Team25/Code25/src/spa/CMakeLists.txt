file(GLOB srcs "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB headers "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp")
add_library(spa ${srcs} ${headers} "src/PKB/PkbPopulator.h" "src/PKB/PkbPopulator.cpp" "src/PKB/PkbRetriever.cpp" "src/PKB/PkbRetriever.h" "src/PKB/VariableStore.cpp" "src/PKB/VariableStore.h" "src/PKB/ConstantStore.cpp" "src/PKB/ConstantStore.h" "src/PKB/StatementStore.h" "src/PKB/StatementStore.cpp" "src/PKB/ProcedureStore.cpp" "src/PKB/ProcedureStore.h" "src/PKB/FollowsStore.cpp" "src/PKB/FollowsStore.h" "src/QPS/QueryParser.cpp" "src/QPS/QueryParser.h" "src/QPS/ParserResponse.cpp" "src/QPS/ParserResponse.h" "src/QPS/QueryTokenizer.cpp" "src/QPS/QueryTokenizer.h" "src/QPS/QueryEvaluator.cpp" "src/QPS/QueryEvaluator.h" "src/QPS/constants/Synonym.cpp" "src/QPS/constants/Synonym.h" "src/QPS/constants/Constants.cpp" "src/QPS/constants/Constants.h" "src/QPS/Qps.cpp" "src/QPS/Qps.h"  "src/SP/Tokenizer.cpp" "src/SP/Tokenizer.h" "src/SP/SourceProcessor.cpp" "src/SP/SourceProcessor.h" "src/SP/Token.cpp" "src/SP/Token.h" "src/SP/ExpressionParser.cpp" "src/SP/ExpressionParser.h" src/SP/Parser.cpp src/SP/DesignExtractor.cpp src/SP/TNode.cpp src/SP/StmtParser.cpp src/SP/StmtParser.h src/SP/ParserUtils.cpp src/SP/ParserUtils.h src/SP/ParserUtils.h)
# this makes the headers accessible for other projects which uses spa lib
target_include_directories(spa PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)


