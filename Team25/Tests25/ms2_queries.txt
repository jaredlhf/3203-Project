1 - comment
procedure p, q;
Select <p, p, q> such that Calls (p, q)
First First Second, Second Second Third
5000
2 - comment
procedure p, q;
Select p such that Calls (p, q)
First, Second
5000
3 - comment
procedure p, q;
Select p such that Calls (p, _)
First, Second
5000
4 - comment
procedure p;
Select p such that Calls (p, "Third")
Second
5000
5 - comment
procedure p;
Select p such that Calls* (p, "Third")
First, Second
5000
6 - comment
procedure p;
Select p such that Modifies(p, "i")
First,Second
5000
7 - comment
procedure p;
Select p such that Uses(p, "y")
First,Second
5000
8 - comment
assign a;
Select a pattern a ("x", _)
4, 7, 11, 15
5000
9 - comment
assign a;
Select a pattern a (_, "x * (y + z)")
15
5000
10 - comment
assign a;
Select a pattern a (_, _"y + z"_)
15
5000
11 - comment
assign a; while w;
Select <a, w>
4 6, 5 6, 7 6, 9 6, 11 6, 12 6, 13 6, 14 6, 15 6, 16 6, 17 6
5000
12 - comment
variable v;
Select v such that Modifies(6, v)
v,z,x, i
5000
13 - comment
assign a;
Select a pattern a (_, _"x * y"_)

5000
14 - comment
assign a;
Select a pattern a (_, "x	")

5000
15 - comment
procedure p, q;
Select p.procName such that Calls (p, q)
First, Second
5000
16 - comment
procedure p, q;
Select p such that Calls (p, q) with q.procName = "Third" such that Modifies (p, "i")
Second
5000
17 - comment
procedure p; call c; while w;
Select p such that Calls ("Second", p) and Parent (w, c) with c.procName = p.procName
Third
5000
18 - comment
if ifs;
Select ifs pattern ifs(_, _, _)
10
5000
19 - comment
if ifs;
Select ifs pattern ifs("x", _, _)
10
5000
20 - comment
if ifs; variable v;
Select v pattern ifs(v, _, _)
x
5000
21 - comment

Select BOOLEAN such that Calls("First", "Second")
TRUE
5000
22 - comment

Select BOOLEAN such that Calls("First", "Third")
FALSE
5000
23 - comment
while w;
Select w pattern w ("x", _)

5000
24 - comment
while w;
Select w pattern w ("i", _)
6
5000
25 - comment
while w;
Select w pattern w (_, _)
6
5000
26 - comment
while w; variable v;
Select v pattern w (v, _)
i
5000